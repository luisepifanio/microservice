package application

import application.controllers.Controllers
import application.ext.CustomObjectMapperProvider
import application.services.ServicesModule
import com.google.inject.Binder
import com.google.inject.Module
import io.bootique.BQCoreModule
import io.bootique.Bootique
import io.bootique.jersey.JerseyModule
import io.bootique.jersey.JerseyModuleExtender

/*
 * This Java source file was auto generated by running 'gradle buildInit --type java-library'
 * by 'luis' at '21/01/17 20:51' catching Gradle 3.1
 *
 * @author luis, @date 21/01/17 20:51
 */

class Application implements Module {
    static void main(String[] args) {
        Bootique.app(args)
                .module(Application)
                .autoLoadModules()
                .run()
    }

    @Override
    void configure(Binder binder) {
        // Application definitions
        Set<Class<Module>> modules = [ ServicesModule ]

        modules.each { it.newInstance().configure(binder) }

        // Jetty Controllers definitions
        // Multibinder<Object> multiBinder = JerseyModule.extend(binder)
        // Controllers.get().each {
        //     multiBinder.addBinding().to(it)
        // }

        JerseyModuleExtender extender = JerseyModule.extend(binder)
        Controllers.get().each { extender.addResource(it) }

        //Seems not to load @Provider automatically
        extender.addResource(CustomObjectMapperProvider)

        //Sensitive configuration binding
        BQCoreModule.extend(binder)
                .declareVar('jdbc.appds.username', 'BD_USER')
        BQCoreModule.extend(binder)
                .declareVar('jdbc.appds.password', 'DB_PASS')

    }

    boolean someLibraryMethod() {
        return false
    }


}
