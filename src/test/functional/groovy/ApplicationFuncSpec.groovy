/*
 * This Spock specification was auto generated by running the Gradle 'init' task
 * by 'luis' at '21/01/17 20:51' with Gradle 3.1
 *
 * @author luis, @date 21/01/17 20:51
 */

import io.restassured.RestAssured
import io.restassured.http.ContentType
import io.restassured.specification.RequestSpecification
import spock.lang.Specification

import static io.restassured.RestAssured.expect
import static io.restassured.RestAssured.given
import static org.hamcrest.Matchers.equalTo

class ApplicationFuncSpec extends Specification {

    def setup() throws Exception {

        RestAssured.port = 9080

        // URL url = getClass().getResource('mockserver')
        // File file = new File(url.toURI());
        // println "mockserver should work on: ${file.absolutePath}"
        // println "canRead: ${file.canRead()}"
    }

    void "Example Test"() {
        given:
        RequestSpecification request = given()
                .accept(ContentType.JSON)

        when:

        def response = request.when()
                .get("/ping")

        then:
        response.then()
                .statusCode(status)
                .spec(specification)

        where:
        id  | status | specification
        1   | 200    | expect().body(equalTo("pong"))


    }
}
